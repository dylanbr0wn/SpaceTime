query Tenant($tenantId: String!) {
    tenant(id: $tenantId) {
        createdAt
        description
        id
        isActive
        logo
        name
        periodLength
        startDate
        tenantActivefields {
          createdAt
          field {
              description
              createdAt
              fieldType
              id
              isActive
              name
              updatedAt
          }
          id
          updatedAt
        }
        updatedAt
    }
}

mutation UpdateTenant($updateTenantId: String!, $tenantActiveFields: [String!], $periodLength: Int, $name: String, $logo: String, $isActive: Boolean, $description: String, $startDate: Date!) {
  updateTenant(id: $updateTenantId, tenantActiveFields: $tenantActiveFields, periodLength: $periodLength, name: $name, logo: $logo, isActive: $isActive, description: $description, startDate: $startDate) {
    createdAt
    description
    id
    isActive
    logo
    name
    periodLength
    startDate
    tenantActivefields {
      createdAt
      field {
          description
          createdAt
          fieldType
          id
          isActive
          name
          updatedAt
      }
      id
      updatedAt
    }
    updatedAt
  
  }
}

query UserFromAuthId($authId: String!) {
  userFromAuthId(authId: $authId) {
        authId
        avatar
        code
        createdAt
        email
        id
        isActive
        isAdmin
        isManager
        isPaymentManager
        isSetup
        managees {
          id
        }
        manager {
          id
        }
        name
        updatedAt
        tenant {
          id
        }
  }
}
    


query Timesheet($date: Date!, $userId: String!) {
    timesheetFromDate(date:$date, userId: $userId ) {
        id
        status
        isChanged
        period {
            id
            startDate
            endDate
        }
        timesheetFields {
            field {
                id
                name
            }
        }
    }
}

query Fields($tenantId: String!) {
  fields(tenantId: $tenantId) {
    createdAt
    description
    id
    isActive
    name
    updatedAt
  }
}

query TimesheetFromAuth($date: Date!, $authId: String!) {
    timesheetFromAuthId(date:$date, authId: $authId ) {
        id
        status
        isChanged
        user{
            id
            tenant {
                id
            }
        }
        period {
            id
            startDate
            endDate
        }
        timesheetFields {
            field {
                id
                name
            }
        }
    }
}

query TimeEntry($index: Int! $timeEntryRowId: String!) {
    timeEntry(index: $index, timeEntryRowId: $timeEntryRowId) {
        id
        createdAt
        updatedAt
        date
        index
        hours
        entryComments {
            id
        }
    }
}    

mutation CreateTimeEntry($index: Int! $timeEntryRowId: String! $hours: Float! $date: Date!) {
    createTimeEntry(index: $index, hours: $hours, date: $date, timeEntryRowId: $timeEntryRowId) {
        id
        createdAt
        updatedAt
        date
        hours
        index
        entryComments {
            id
        }
    }
}

mutation UpdateTimeEntryhours(
    $id: String!
    $hours: Float!
) {
    updateTimeEntry(id: $id, hours: $hours) {
        id
        createdAt
        updatedAt
        date
        hours
        index
        entryComments {
            id
        }
    }
}

mutation DeleteTimeEntry($id: String!) {
    deleteTimeEntry(id: $id) {
        id
        hours
        date
        index
        updatedAt
        createdAt
    }
}
# mutation UpdateTimeEntryRow(
#     $id: String!
# ) {
#     updateTimeEntryRow(
#         id: $id
#     ) {
#         id
#         createdAt
#         updatedAt
#         fields {
#             field {
#                 id
#             }
#         }
#     }
# }

query TimeEntries($id: String!) {
    timeEntryRow(id: $id) {
       timeEntries{
           id
       }
    }
}
fragment TimeEntryRow on TimeEntryRow {
    id
    createdAt
    updatedAt
    rowOptions {
      id
      fieldOption {
        id
      }
    }
}

query TimeEntryRow($id: String!) {
    timeEntryRow(id: $id) {
        ...TimeEntryRow
        
    }
}

query TimeEntryRows($timesheetId: String!) {
  timeEntryRows(timesheetId: $timesheetId) {
    ...TimeEntryRow
  }
}



mutation CreateTimeEntryRow($timesheetId: String!) {
    createTimeEntryRow(timesheetId: $timesheetId) {
        ...TimeEntryRow
    }
}

mutation DeleteTimeEntryRow($id: String!) {
    deleteTimeEntryRow(id: $id) {
        id
    }
}

query UserFromToken($token: String!) {
    userFromToken(token: $token) {
        id
        name
        tenant {
            name
            description
            logo
            isActive
            updatedAt
            createdAt
        }
    }
}

query EntryComment($id: String!) {
    entryComment(id: $id) {
        id
        createdAt
        updatedAt
        text
        user {
            id
            name
            avatar
        }
    }
}

mutation createEntryComment($text: String!, $entryId: String!, $userId: String!) {
    createEntryComment(text: $text, entryId: $entryId, userId: $userId) {
        id
        createdAt
        updatedAt
        text
        user {
            id
            name
            avatar
        }
    }
}

mutation CreateOneTimeToken($userId: String!, $tenantId: String!) {
    createOneTimeToken(userId: $userId, tenantId: $tenantId) {
        id
        user {
            id
        }
        tenant {
            id
        }
        createdAt
        updatedAt
    }
}

mutation CreateUser($email: String!, $name: String!, $tenantId: String, $authId: String!, $code: String, $avatar: String, $isActive: Boolean, $isAdmin: Boolean, $isPaymentManager: Boolean, $isManager: Boolean, $managerId: String, ) {
    createUser(email: $email, name: $name, tenantId: $tenantId, authId: $authId, code: $code, avatar: $avatar, isActive: $isActive, isAdmin: $isAdmin, isPaymentManager: $isPaymentManager, isManager: $isManager, managerId: $managerId) {
        id
        email
        authId
        isActive
        code
        isSetup
        isAdmin
        tenant {
            id
        }
        name
        avatar
        createdAt
        updatedAt
        manager {
            id
        }
        isPaymentManager
        isManager
        managees {
            id
        }
    }
}

mutation UpdateUser($id: String!, $authId: String, $avatar: String,$tenantId: String, $code: String,  $email: String, $isActive: Boolean, $isAdmin: Boolean, $isManager: Boolean, $isPaymentManager: Boolean, $isSetup: Boolean, $managerId: String, $name: String) {
  updateUser(id: $id, authId: $authId,tenantId: $tenantId, avatar: $avatar, code: $code, email: $email, isActive: $isActive, isAdmin: $isAdmin, isManager: $isManager, isPaymentManager: $isPaymentManager, isSetup: $isSetup, managerId: $managerId, name: $name) {
    updatedAt
    tenant {
      id
    }
    name
    manager {
      id
    }
    managees {
      id
    }
    isSetup
    isPaymentManager
    isManager
    isAdmin
    isActive
    id
    email
    createdAt
    code
    avatar
    authId
  }
}



query Managers($tenantId: String!) {
  managers(tenantId: $tenantId) {
    id
    name
  }
}

query OneTimeTokens($tenantId: String!) {
  oneTimeTokens(tenantId: $tenantId) {
    id
    user {
      id
      name
      avatar
    }
    createdAt
  }
}

query Users($tenantId: String!) {
  users(tenantId: $tenantId) {
    id
    email
    authId
    code
    isActive
    isAdmin
    tenant {
      id
      name
    }
    name
    avatar
    createdAt
    updatedAt
    managees {
      id
      email
      name
      avatar
    }
    manager {
      id
      email
      name
    }
    isPaymentManager
    isManager
    isSetup
  }
}

query StatusEvents($timesheetId: String!){
    statusEvents(timesheetId: $timesheetId) {
        id
        createdAt
        type
        status
        message
        user{
            name
            avatar
        }
    }
}

mutation CreateStatusEvent($timesheetId: String!, $type: EventType!, $status: Status!, $message: String!, $userId: String!){
    createStatusEvent(timesheetId: $timesheetId, type: $type, status: $status, message: $message, userId: $userId) {
        id
        createdAt
        type
        status
        message
        user{
            name
            avatar
        }
    }
}

query TimesheetUpdated($timesheetId: String!){
    timesheet(id: $timesheetId) {
        updatedAt
        id
        timeEntryRows {
            id
            updatedAt
            timeEntries {
                id
                updatedAt
            }
        }
    }
}

mutation UpdateTimesheetChanged($timesheetId: String!, $changed: Boolean!){
    updateTimesheet(id: $timesheetId, isChanged: $changed) {
        id
        updatedAt
        isChanged
    }
}

mutation CreateTenant($name: String!, $description: String!, $logo: String!, $isActive: Boolean!, $startDate:Date!, $periodLength:Int! ){
    createTenant(name: $name, description: $description, logo: $logo, isActive: $isActive, startDate: $startDate, periodLength: $periodLength) {
        id
        name
        description
        startDate
        periodLength
        isActive
        updatedAt
        createdAt
    }
}

query Field($id: String!) {
  field(id: $id) {
    createdAt
    updatedAt
    name
    isActive
    id
    fieldType
    description
    fieldOptions {
      id
      name
      isActive
      updatedAt
      createdAt
    }
  }
}

query EntryRowOption($fieldId: String!, $rowId: String!) {
  entryRowOption(fieldId: $fieldId, rowId: $rowId) {
    createdAt
    fieldOption {
      createdAt
      id
      isActive
      name
      updatedAt
    }
    id
    updatedAt
  }
}

mutation UpdateEntryRowOption($fieldId: String!, $fieldOptionId: String!, $rowId: String!) {
  updateEntryRowOption(fieldId: $fieldId, fieldOptionId: $fieldOptionId, rowId: $rowId) {
    createdAt
    fieldOption {
      createdAt
      id
      isActive
      name
      updatedAt
    }
    id
    updatedAt
  }
}