"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Department {
  createdAt: Date!
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  projects: [Project!]!
  tenant: Tenant!
  updatedAt: Date!
  users: [User!]!
}

type EntryComment {
  createdAt: Date!
  id: ID!
  text: String!
  updatedAt: Date!
  user: User!
}

enum EventType {
  Comment
  StatusChange
}

type Mutation {
  createEntryComment(entryId: String!, text: String!, userId: String!): EntryComment!
  createOneTimeToken(tenantId: String!, userId: String!): OneTimeToken!
  createStatusEvent(message: String, status: Status!, timesheetId: String!, type: EventType!, userId: String!): StatusEvent!
  createTenant(description: String, isActive: Boolean!, logo: String, name: String!, periodLength: Int!, startDate: Date!): Tenant!
  createTimeEntry(date: Date!, hours: Float!, index: Int!, timeEntryRowId: String!): TimeEntry!
  createTimeEntryRow(departmentId: String, projectId: String, timesheetId: String!, workTypeId: String): TimeEntryRow!
  createUser(authId: String!, avatar: String, code: String, departmentId: String, email: String!, isActive: Boolean, isAdmin: Boolean, isManager: Boolean, isPaymentManager: Boolean, isSetup: Boolean, managerId: String, name: String!, tenantId: String): User!
  createUserBasic(authId: String!, avatar: String, email: String!, name: String!, tenantId: String!): User!
  deleteEntryComment(id: String!): EntryComment!
  deleteTenant(id: String!): Tenant!
  deleteTimeEntry(id: String!): TimeEntry!
  deleteTimeEntryRow(id: String!): TimeEntryRow!
  updateEntryComment(id: String!, text: String!): EntryComment!
  updateTenant(description: String, id: String!, isActive: Boolean, logo: String, name: String, periodLength: Int): Tenant!
  updateTimeEntry(hours: Float!, id: String!): TimeEntry!
  updateTimeEntryRow(departmentId: String, id: String!, projectId: String, workTypeId: String): TimeEntryRow!
  updateTimesheet(id: String!, isChanged: Boolean!): Timesheet!
  updateUser(authId: String, avatar: String, code: String, departmentId: String, email: String, id: String!, isActive: Boolean, isAdmin: Boolean, isManager: Boolean, isPaymentManager: Boolean, isSetup: Boolean, managerId: String, name: String, tenantId: String): User!
}

type OneTimeToken {
  createdAt: Date!
  id: ID!
  tenant: Tenant!
  updatedAt: Date!
  user: User!
}

type Period {
  createdAt: Date!
  endDate: Date!
  id: ID!
  startDate: Date!
}

type Project {
  code: String!
  createdAt: Date!
  department: Department!
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  tenant: Tenant!
  updatedAt: Date!
}

type Query {
  departments(tenantId: String!): [Department!]!
  entryComment(id: String!): EntryComment!
  entryComments(entryId: String!): [EntryComment!]!
  managers(tenantId: String!): [User!]!
  oneTimeToken(id: String!): OneTimeToken!
  oneTimeTokens(tenantId: String!): [OneTimeToken!]!
  project(id: String!): Project!
  projects(tenantId: String!): [Project!]!
  statusEvents(timesheetId: String!): [StatusEvent!]!
  tenant(id: String!): Tenant!
  timeEntry(index: Int!, timeEntryRowId: String!): TimeEntry!
  timeEntryRow(id: String!): TimeEntryRow!
  timeEntryRows(timesheetId: String!): [TimeEntryRow!]!
  timesheet(id: String!): Timesheet!
  timesheetFromDate(date: Date!, userId: String!): Timesheet!
  user(id: String!): User!
  userFromAuthId(authId: String!): User!
  userFromToken(token: String!): User!
  users(tenantId: String!): [User!]!
  workType(id: String!): WorkType!
  workTypes(tenantId: String!): [WorkType!]!
}

enum Status {
  ManagerApproved
  PaymentApproved
  Rejected
  Submitted
  Unsubmitted
}

type StatusEvent {
  createdAt: Date!
  id: ID!
  message: String
  status: Status!
  type: EventType!
  user: User!
}

type Tenant {
  createdAt: Date!
  description: String
  id: ID!
  isActive: Boolean!
  logo: String
  name: String!
  periodLength: Int!
  startDate: Date!
  updatedAt: Date!
  users: [User!]!
}

type TimeEntry {
  createdAt: Date!
  date: Date!
  entryComments: [EntryComment!]!
  hours: Float!
  id: ID!
  index: Int!
  updatedAt: Date!
}

type TimeEntryRow {
  createdAt: Date!
  department: Department
  id: ID!
  project: Project
  timeEntries: [TimeEntry!]!
  updatedAt: Date!
  workType: WorkType
}

type Timesheet {
  createdAt: Date!
  id: ID!
  isChanged: Boolean!
  period: Period!
  status: Status!
  timeEntryRows: [TimeEntryRow!]!
  updatedAt: Date!
  user: User!
}

type User {
  authId: String
  avatar: String
  code: String
  createdAt: Date!
  department: Department
  email: String
  id: ID!
  isActive: Boolean!
  isAdmin: Boolean!
  isManager: Boolean!
  isPaymentManager: Boolean!
  isSetup: Boolean!
  managees: [User!]
  manager: User
  name: String
  tenant: Tenant
  updatedAt: Date!
}

type WorkType {
  code: String!
  createdAt: Date!
  description: String
  id: ID!
  isActive: Boolean!
  isBillable: Boolean!
  isDefault: Boolean!
  isSystem: Boolean!
  multiplier: Float!
  name: String!
  tenant: Tenant!
  updatedAt: Date!
}