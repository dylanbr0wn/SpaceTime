### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Department {
  createdAt: DateTime!
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  projects: [Project!]!
  updatedAt: DateTime!
  users: [User!]!
}

type EntryComment {
  createdAt: DateTime!
  id: ID!
  text: String!
  updatedAt: DateTime!
  user: User!
}

input EntryCommentCreateInput {
  text: String!
  timeEntryId: String!
  userId: String!
}

input EntryCommentDeleteInput {
  id: ID!
}

input EntryCommentUpdateInput {
  id: ID!
  text: String!
}

type Mutation {
  attachAuth0Id(auth0Id: String!, userId: ID!): User
  createEntryComment(entryComment: EntryCommentCreateInput!): EntryComment
  createTimeEntry(data: TimeEntryCreateInput!): TimeEntry
  createTimeEntryRow(departmentId: String, projectId: String, timesheetId: String!, workTypeId: String): TimeEntryRow
  createUser(user: UserCreateInput!): User
  deleteEntryComment(EntryComment: EntryCommentDeleteInput!): EntryComment
  deleteTimeEntry(id: String!): TimeEntry
  deleteTimeEntryRow(TimeEntryRow: TimeEntryRowDeleteInput!): TimeEntryRow
  updateEntryComment(entryComment: EntryCommentUpdateInput!): EntryComment
  updateTimeEntryRow(departmentId: String, id: String!, projectId: String, workTypeId: String): TimeEntryRow
  updateTimeEntryhours(data: TimeEntryUpdateInput!, id: String!): TimeEntry
  updateUser(user: UserUpdateInput!): User
}

type Period {
  createdAt: DateTime!
  endDate: DateTime!
  id: ID!
  startDate: DateTime!
}

type Project {
  code: String!
  createdAt: DateTime!
  department: Department!
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  updatedAt: DateTime!
}

type Query {
  allUsers: [User!]!
  departments: [Department!]!
  getEntryComment(commentId: String!): EntryComment
  getEntryComments(timeEntryId: String!): [EntryComment!]
  getEntryCommentsByTimesheet(timesheetId: String!): [EntryComment!]!
  getTimeEntryRow(id: String!): TimeEntryRow
  getTimeEntryRows(timesheetId: String!): [TimeEntryRow!]!
  getTimesheet(Timesheet: TimesheetGetInput!): Timesheet
  getUserFromAuth0(auth0Id: String!): User
  getUserFromToken(token: ID!): User
  projects: [Project!]!
  tenantFromId(tenantId: String!): Tenant
  timeEntry(TimeEntry: TimeEntryFromRowDateInput!): TimeEntry
  timeEntryFromId(TimeEntry: TimeEntryFromIdInput!): TimeEntry
  workTypes: [WorkType!]!
}

type Tenant {
  createdAt: DateTime!
  description: String
  id: ID!
  isActive: Boolean!
  logo: String
  name: String!
  periodLength: Int!
  startDate: DateTime!
  updatedAt: DateTime!
}

type TimeEntry {
  createdAt: DateTime!
  date: DateTime!
  entryComments: [EntryComment!]!
  hours: Float!
  id: ID!
  updatedAt: DateTime!
}

input TimeEntryCreateInput {
  date: DateTime!
  hours: Float!
  timeEntryRowId: String!
}

input TimeEntryFromIdInput {
  id: ID!
}

input TimeEntryFromRowDateInput {
  date: DateTime!
  timeEntryRowId: String!
}

type TimeEntryRow {
  createdAt: DateTime!
  department: Department
  id: ID!
  project: Project
  timeEntries: [TimeEntry!]!
  updatedAt: DateTime!
  workType: WorkType
}

input TimeEntryRowDeleteInput {
  id: ID!
}

input TimeEntryRowUpdateInput {
  departmentId: String
  id: ID!
  projectId: String
  workTypeId: String
}

input TimeEntryUpdateInput {
  hours: Float!
}

type Timesheet {
  createdAt: DateTime!
  id: ID!
  period: Period!
  timeEntryRows: [TimeEntryRow!]!
  updatedAt: DateTime!
  user: User!
}

input TimesheetGetInput {
  date: DateTime!
  userId: String!
}

type User {
  auth0Id: String
  avatar: String
  code: String!
  createdAt: DateTime!
  department: Department!
  email: String!
  id: ID!
  isActive: Boolean!
  isAdmin: Boolean!
  isManager: Boolean!
  isPaymentManager: Boolean!
  managees: [User!]!
  manager: User
  name: String
  tenant: Tenant!
  updatedAt: DateTime!
}

"""User Create Input"""
input UserCreateInput {
  auth0Id: String!
  code: String!
  departmentId: String!
  email: String!
  isActive: Boolean!
  isAdmin: Boolean!
  isManager: Boolean!
  isPaymentManager: Boolean!
  managerId: String!
  tenantId: String!
}

"""User Update Input"""
input UserUpdateInput {
  auth0Id: String!
  code: String!
  departmentId: String!
  email: String!
  id: ID!
  isActive: Boolean!
  isAdmin: Boolean!
  isManager: Boolean!
  isPaymentManager: Boolean!
  managerId: String!
}

type WorkType {
  code: String!
  createdAt: DateTime!
  description: String
  id: ID!
  isActive: Boolean!
  isBillable: Boolean!
  isDefault: Boolean!
  isSystem: Boolean!
  multiplier: Float!
  name: String!
  updatedAt: DateTime!
}