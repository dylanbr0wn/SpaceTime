### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Department {
  createdAt: DateTime!
  description: String
  id: Int!
  isActive: Boolean!
  name: String!
  projects: [Project!]!
  updatedAt: DateTime!
  users: [User!]!
}

type EntryComment {
  createdAt: DateTime!
  id: Int!
  text: String!
  updatedAt: DateTime!
  user: User!
}

type Mutation {
  createTimeEntry(data: TimeEntryCreateInput!): TimeEntry
  createTimeEntryRow(data: TimeEntryRowCreateInput!): TimeEntryRow
  createUser(code: String!, department: Int!, email: String!, isActive: Boolean!, isAdmin: Boolean!, isManager: Boolean!, isPaymentManager: Boolean!, manager: Int!, profile: String!): User
  deleteTimeEntry(id: Int!): TimeEntry
  deleteTimeEntryRow(id: Int!): TimeEntryRow
  updateTimeEntryRow(data: TimeEntryRowUpdateInput!, id: Int!): TimeEntryRow
  updateTimeEntryhours(data: TimeEntryUpdateInput!, id: Int!): TimeEntry
}

type Period {
  createdAt: DateTime!
  endDate: DateTime!
  id: Int!
  startDate: DateTime!
}

type Profile {
  avatar: String!
  bio: String
  firstName: String!
  id: Int!
  lastName: String!
}

type Project {
  code: String!
  createdAt: DateTime!
  department: Department!
  description: String
  id: Int!
  isActive: Boolean!
  name: String!
  updatedAt: DateTime!
}

type Query {
  allUsers: [User!]!
  getUser(id: Int!): User
  timesheet(periodId: Int, userId: Int): Timesheet
}

type TimeEntry {
  createdAt: DateTime!
  date: DateTime!
  entryComments: [EntryComment!]!
  hours: Float!
  id: Int!
  updatedAt: DateTime!
}

input TimeEntryCreateInput {
  date: DateTime!
  hours: Float!
  timeEntryRowId: Int!
}

type TimeEntryRow {
  createdAt: DateTime!
  department: Department!
  id: Int!
  project: Project!
  timeEntries: [TimeEntry!]!
  updatedAt: DateTime!
  workType: WorkType!
}

input TimeEntryRowCreateInput {
  departmentId: Int!
  projectId: Int!
  timesheetId: Int!
  workTypeId: Int!
}

input TimeEntryRowUpdateInput {
  departmentId: Int!
  projectId: Int!
  workTypeId: Int!
}

input TimeEntryUpdateInput {
  hours: Float!
}

type Timesheet {
  createdAt: DateTime!
  id: Int!
  period: Period!
  timeEntryRows: [TimeEntryRow!]!
  updatedAt: DateTime!
  user: User!
}

type User {
  code: String!
  createdAt: DateTime!
  department: Department!
  email: String!
  id: Int!
  isActive: Boolean!
  isAdmin: Boolean!
  isManager: Boolean!
  isPaymentManager: Boolean!
  managees: [User!]!
  manager: User
  profile: Profile
  updatedAt: DateTime!
}

type WorkType {
  code: String!
  createdAt: DateTime!
  description: String
  id: Int!
  isActive: Boolean!
  isBillable: Boolean!
  isDefault: Boolean!
  isSystem: Boolean!
  multiplier: Float!
  name: String!
  updatedAt: DateTime!
}